/**
 * Thomas Simpson
 * This is totally free software. Have fun.
 * 
 * Produces ratio-based css classes that can be used to get fixed sizes.
 */

.ratio-wrapper {
	width: 100%;
	position: relative;

	.ratio-wrapper-inner {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;

		.footer { 
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
		}

		.header {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
		}

	}

}


@mixin ratio($wide, $high){
	.ratio-wrapper-#{$wide}-#{$high}  { 
		@extend .ratio-wrapper;
		@if $high == $wide { padding-bottom: 100%; } 
		@if $high > $wide { padding-bottom: $high / $wide * 100%; } 
		@if $high < $wide { padding-bottom: $wide / $high * 100%; } 
	}
}

$size: 16;

@for $wide from 1 to $size {
	@for $high from 1 to $size {
		@include ratio($wide, $high);
	}
}

/*
@each $size in $grids-available {
	@include ab-gridX($size);
}

/*
.ratio-wrapper-1-1  { padding-bottom: 100%; }
.ratio-wrapper-10-9 { padding-bottom: 90%; }
.ratio-wrapper-5-4  { padding-bottom: 80%; }
.ratio-wrapper-4-3  { padding-bottom: 75%; }
.ratio-wrapper-3-2  { padding-bottom: 66.66%; }
.ratio-wrapper-8-5  { padding-bottom: 62.5%; }
.ratio-wrapper-16-9 { padding-bottom: 56.25%; }
.ratio-wrapper-2-1  { padding-bottom: 50%; }
.ratio-wrapper-3-1  { padding-bottom: 33%; }
.ratio-wrapper-7-2  { padding-bottom: 28.5%; }
.ratio-wrapper-4-1  { padding-bottom: 25%; }
.ratio-wrapper-5-1  { padding-bottom: 20%; }

.ratio-wrapper-3-4  { padding-bottom: 133%; }
.ratio-wrapper-5-8  { padding-bottom: 160%; }
.ratio-wrapper-9-16 { padding-bottom: 177%; }
.ratio-wrapper-1-2  { padding-bottom: 200%; }
*/
